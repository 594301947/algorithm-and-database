
备用知识：
     10亿Byte = 1G
问题：
     (1)10个整数需要多少G？
          10亿整数=40亿Byte=4G
     (2)10亿bit需要多少G？
          10亿bit=1G/8=0.125G=125MB          

结论：
     10亿个数据，
           ---->40G
           ---->125M
     
=====================================

大数据处理——面试热点
解题思路：
     1-map-reduce：哈希分流+分而治之
     2-bitmap：可以用于排序
     3-bloom过滤器：不能用于排序
     4-桶排序
【1】map+reduce
（1）先介绍哈希函数
     1.具有无限的input域
     2.input值相同，output值一定相同
     3.input值不同，output值有可能相同，也有可能不同
     4.最重要的性质：很多不同的输入，均匀的分布在S域上  （评价哈希函数的优劣）
（2）介绍map-reduce过程
{
     map阶段：(哈希函数分流到计算节点)将大任务划分成小任务——>如何划分？假设有海量数据，每个数据都有id，有M台机器或计算节点
          将大数据经过一个哈希函数，计算出key，再key%M，得到的值必然分配到每个机器或计算节点上，
     经过优秀的哈希函数后，数据在每个机器或计算节点上是均匀分布的
     reduce阶段：子任务在多个机器上并发处理，处理完之后，合并结果
}
[难点]
     备份的考虑，分布式存储的设计细节以及容灭策略
     由于机器的性能不同，任务的分配策略，负载均衡
     跟踪任务的细节，实时查看计算节点的状态
（2）经典案例：海量数据的词频统计
     map阶段：哈希函数将单词分流到多个计算节点上，形成多个子任务（相同单词的必然会分配到同一台机器上）
     reduce阶段：多个计算节点进行词频统计，在进行合并

【2】Bitmap位图
原理：
     (0)Bitmap的数据类型只能是0和1，表示存在和不存在
     (1)一个bit位置可以存放任意大小的数据：bitmap的大小只和max-min大小有关
     (2)只能对不重复的数据进行排序；不能记录一个数据出现了多少次
{
     优点：
          bitmap的大小与数据大小无关；1bit就可以表示某个元素存在或不存在
          与bloom相比，bitmap可以用于排序
     缺点：bitmap的大小与max-min成正比：即使数据量很小，但是数据域大，也需要开辟过多的bit位置
}

经典案例：请对10亿个IPV4的ip地址进行排序，每个ip只会出现一次   牢记（IPV4的ip数量≈42亿）
解题思路：
     将ip通过简单的规则转换成无符号整数
     将无符号整数排序
     排序后，再转回ip地址即可
内存分析：
情况1：10亿个ip--->10亿个无符号整数--->40亿Byte === 4G内存
情况2：
     10亿个ip--->bitmap--->10亿bit--->1G/8=0.125G=125M


经典案例1
一台机器实现百亿（网页黑名单/垃圾邮件过滤/爬虫的网址判重）系统！

【Bloom过滤器】
     精确地代表一个集合（bit类型的数组），并"精确"地判断一个元素是否在集合中
     
一般Bloom的题目，要求：
        (1)允许一定的失误率：宁可错杀三千，不可放过一个（如果是犯罪嫌疑人，则一定抓住；如果不是犯罪嫌疑人，可能误判为是犯罪嫌疑人）
        (2)空间要求很严格
        
Bloom过滤器的相关概念
     S域：bit类型的数组

工作原理：input--->K个哈希函数--->S域涂黑--->检查data
     [1]input怎么进入Bloom过滤器：先将所有的input集合中的数，都映射到S域
          (1)准备K个相互独立的哈希函数，S域（1~M）
          (2)将所有的input都经过K个哈希函数，计算出哈希码之后，都mod M，就会在S域上有对应的落脚点，将其描黑（即设为1）
     [2]怎么查询data是否在Bloom中：查询某个数data是否在input集合中？
          如果data经过步骤[1]过程后，data对应的S域中的数
          (1)有一个没有被涂黑，那么data一定不在input集合中
          (2)全部被涂黑，那么data可能在input集合中，极小可能不在input集合中
bit类型的数组要开多大（即数组长度M）？
     (1)样本数量：只与input的个数有关系，与input集合中的元素占据的字节大小没有关系
     (2)预期失误率：M = -(n*lnP)/(ln2*ln2)
               其中
                    M表示bit数组长度
                    P表示允许的失误率
哈希函数个数：
     k=ln2*m/n

实际的预期失误率
     (1-e^(-n*k/m))^k


【2】桶排序
经典案例：将10亿个年龄，按照年龄顺序排序
解题思路：
     由于每个人具有的年龄是可以重复的，因此不能用BitMap对每个人按照年龄排序！
     ---->桶排序


                    

