#include<iostream>
using namespace std;

void swap(int& a, int& b){
	a ^= b; b ^= a; a ^= b;
}
void AdjustDown(int A[], int k, int N){
	for (int i = k * 2 + 1; i < N; i = i * 2 + 1){
		if (i + 1 < N && A[i] < A[i + 1]) //如果k存在右孩子，且 左孩子 < 右孩子
			i++; //则选取右孩子节点

		if (A[k] >= A[i]) //如果根k >= k的孩子节点，则已经是大根堆，不用调整，直接break
			break;
		else{
			swap(A[k], A[i]);
			k = i;
		}
	}
}
void BuildMaxHeap(int A[], int N){
	for (int i = N/2-1; i >= 0; i--){
		AdjustDown(A, i, N);
	}
}
void HeapSort(int A[], int N){
	BuildMaxHeap(A, N);
	for (int i = N - 1; i > 0; i--){
		swap(A[0], A[i]);
		AdjustDown(A, 0, i);
	}
	for (int i = 0; i < N;i++)
		printf("%d  ", A[i]);
}

int main(){
	int A[] = { 2, 5, 6, 0, 53, 17, 78, 90, 4, 65, 87, 32, -1 };
	int N = sizeof(A) / sizeof(A[0]);
	HeapSort(A, N);
	system("pause");
}
