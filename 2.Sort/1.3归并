


void printA(int A[], int n){
	for (int i = 0; i < n; i++)
		cout << A[i] << "   ";
	cout << endl;
}
void merge(int A[], int B[], int l, int mid, int r){
	int k = l;
	int i = l, j = mid + 1;
	while (i <= mid && j <= r){
		B[k++] = A[i] < A[j] ? A[i++] : A[j++];
	}
	while (i <= mid)
		B[k++] = A[i++];
	while (j <= r)
		B[k++] = A[j++];
	for (int i = l; i <= r; i++)
		A[i] = B[i];
}
void merge_sort(int A[],int B[], int l, int r){
	if (l < r){
		int mid = (l + r) / 2;
		merge_sort(A, B, l, mid);
		merge_sort(A, B, mid + 1, r);
		merge(A, B, l, mid, r);
	}
}
int main(){
	int A[] = { 1,5,6,8,1,2,3,6,5,55};
	int len = sizeof(A) / sizeof(A[0]);
	int *B = new int[len + 1];
	merge_sort(A, B,0,len-1);
	printA(A, len);
	system("pause");
}


