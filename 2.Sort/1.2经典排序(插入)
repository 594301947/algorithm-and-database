简单插入排序
二分插入排序

插入排序的套路：
    确定将元素[1,N-1]，插入到[0,i-1]中
1.先查找插入位置pos
2.将i-1~pos中的元素后移
3.插入元素


1.简单插入排序
void insert_sort(int A[], int N){
	int j;
	for (int i = 1; i < N; i++) {//待插元素[1,N-1]
		if (A[i] < A[i - 1]){//A[i]小于前驱A[i-1]:将待插元素A[i],插入到[0,i-1]中
			int tmp = A[i]; //1.保存待插入元素
			for (j = i - 1; j >= 0; j--){ //2.寻找查找插入位置&&后移
				if (A[j]>tmp)
					A[j + 1] = A[j];
				else
					break;
			}
			A[j + 1] = tmp;//3.插入
		}
	}
}

==========================
2.二分插入排序

//查找 >=key 的最左位置
int binary_search_left(int A[], int N, int key){
	int l = 0, r = N - 1;
	int ret = -1;
	while (l < r){
		int mid = (l + r) / 2;
		if (A[mid] >= key){ // 0 3 3 4 --> 3
			ret = mid;
			r = mid - 1;
		}
		else
			l = mid + 1;
	}
	return ret;
}
void binary_insert_sort(int A[], int N){
	for (int i = 1; i < N; i++){ // [1,N-1]
		if (A[i]<A[i - 1]){
			int tmp = A[i]; //保存待插入元素
			int pos = binary_search_left(A, i - 1, tmp); //查找插入位置
			int j;
			for (j = i - 1; j >= pos; j--) //后移
				A[j + 1] = A[j];
			A[j + 1] = tmp;//插入
		}
	}
}
