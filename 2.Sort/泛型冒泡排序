#include<iostream>
#include<stack>
using namespace std;

typedef int(*CMP)(const void* a, const void* b); //回调函数接口void* a--> (*(类型*)a)

template<class T>  //泛型冒泡排序
void bubbleSort(T A[], int N, CMP cmp){
	for (int i = 0; i < N - 1; i++){
		bool flag = false;
		for (int j = 0; j < N - i - 1; j++){
			if (cmp(&A[j], &A[j + 1])>0){
				swap(A[j], A[j + 1]);
				flag = true;
			}
		}
		if (flag == false)
			return;
	}
}
//示例1：int A[10]
int Compare1(const void* a, const void* b){
	return *(int*)a - *(int*)b;
}
void test1(){
	int A[10] = { 2, 1, 3, 4, 7, 6, 8, 9, 4, 0 };
	bubbleSort(A, 10, Compare1);
	for (int i = 0; i < 10; i++)
		cout << A[i] << endl;
}

//示例2：Node A[10]
class Node{
public:
	Node(int x, int y){
		this->x = x;
		this->y = y;
	}
	void getX(){}
public:
	int x;
	int y;
};
int Compare2(const void* a, const void* b){ //回调函数
	return (*(Node*)a).x - (*(Node*)b).x;
}
void test2(){
	Node A[5] = { Node(1, 1), Node(2, 2), Node(0, 0), Node(3, 3), Node(0, 0) };
	bubbleSort(A, 5, Compare2);
	for (int i = 0; i < 5; i++)
		cout << A[i].x << "  " << A[i].y << endl;
}
int main(){
	test1();
	test2();
	system("pause");
}
