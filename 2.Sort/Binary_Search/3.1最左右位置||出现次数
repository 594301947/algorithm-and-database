（1.1）对于一个有序数组arr，再给定一个整数num，请在arr中找到num这个数出现的[最左/右]位置。
（1.2）对于一个有序数组arr，再给定一个整数num，请在arr中找到num这个数出现的次数。
int getLeft(int A[], int N ,int Key){ //Key出现的最左位置
	int l = 0, r = N - 1;
	int ret = -1;
	while (l <= r){
		int mid = (l + r) / 2;
		if (A[mid] == Key){
			ret = mid;
			r = mid - 1;
		}
		else if (A[mid] > Key)
			r = mid - 1;
		else
			l = mid + 1;
	}
	return ret;
}
int getRight(int A[], int N,int key){ //Key出现的最右位置
	int l = 0, r = N - 1;
	int ret = -1;
	while (l <= r){
		int mid = (l + r) / 2;
		if (A[mid] == key){
			ret = mid;
			l = mid + 1;
		}
		else if (A[mid]>key)
			r = mid - 1;
		else
			l = mid + 1;
	}
	return ret;
}
int main(){
	int A[] = { 1,2,2,3,5,5,5,6,7 };
	int len = sizeof(A) / sizeof(A[0]);
	int ret1 = getLeft(A, len, 5);
	int ret2 = getRight(A, len, 5);
	int ret = ret2 - ret1 + 1;
}
