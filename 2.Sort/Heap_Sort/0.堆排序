
建立大根堆：从最后一个父节点到第一个父节点，AdjustDown建立大根堆
依次取堆顶元素：输出，交换，AdjustDown


void printA(int A[], int n){
	for (int i = 0; i < n; i++)
		cout << A[i] << "   ";
	cout << endl;
}
void AdjustDown(int A[], int k, int N){
	for (int i = 2 * k + 1; i < N; i = i * 2 + 1){
		if (i+1<N&&A[i] < A[i + 1])
			i++;
		if (A[k]>A[i])
			break;
		else{
			swap(A[i], A[k]);
			k = i;
		}
	}
}
void heap_sort(int A[],int N){
	for (int i = N / 2 - 1; i >= 0; i--){ //建立大根堆
		AdjustDown(A, i, N);
	}
	for (int i = N - 1; i >= 0; i--){ 
		cout << A[0] << endl; //取出堆顶元素
		swap(A[i], A[0]); //交换
		AdjustDown(A, 0, i); //向下调整
	}
}
int main(){
	int A[] = { 1,3,5,6,2,4,9,10 };
	int len = sizeof(A) / sizeof(A[0]);
	heap_sort(A, len);
	system(0);
}
