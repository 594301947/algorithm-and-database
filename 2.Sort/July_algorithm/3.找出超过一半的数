解题关键：用候选者去删除另外一个数（一次性删除2个数）
有没有候选者cand，用times标记-->当times>0时，有cand；当times==0时，没有cand
    (1)如果没有候选者cand，就设置候选者
    (2)如果有候选者cand,就用cand去删除另外一个数
  遍历一次结束后，如果存在出现次数最多的数，一定是cand

int MoreHalfNum(int A[], int N){
	int cand; //设置候选者
	int times = 0;
	//1.遍历一次，一次性删除两个元素
	for (int i = 0; i < N; i++){
		if (times == 0){ //times==0，表示没有候选者cand
			cand = A[i];//设置当前A[i]为候选者cand，此时A[i]出现的次数为1
			times = 1; 
		}
		else if (A[i] != cand)//用cand去删除其他数
			times--; 
		else
			times++;
	}
	//2.遍历完成后，如果存在出现次数大于1/2的数，那一定是cand
	//因此，遍历一遍数组，统计值等于cand出现的次数
	int cnt = 0;
	for (int i = 0; i < N; i++){
		if (A[i] == cand){
			cnt++;
		}
	}
	//3.判断cand出现的次数cnt是否大于数组长度的1/2
	if (cand > N/2)
		return cand;
	else
		return -1; //没有找到大于1/2的数
}
