[**非常经典**]给定一个数组，找到从1开始第一个不在里面的正整数
例如：[3,4,-1,1]，输出2
解：
  (1)数组的下标是从0开始的，我们希望把数组做成A[i]=i+1的情况
  (2)每次循环，A[i]
    要么i+1
    要么n-1
    要么有一个数
  被放到正确的位置上    
  
  int firstMissingPositive(int A[],int N)
  {
    for(int i=0;i<N;i++){
      //[0,i-1] is 1,2,3,...,i
      if(A[i]==i+1) 
        i++;
      else if(A[i]<=i || A[i]>N || A[A[i]-1]==A[i]){
        A[i]=A[N-1];  N--;  //删除A[i]:常用的方法——>将A[N-1]覆盖A[i]，长度N--
      }
      else
        swap(A[i],A[A[i]-1]);
    }
    return N+1;
  }
