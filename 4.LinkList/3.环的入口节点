返回单链表的中间节点
LinkNode* getMidNode(LinkNode* L){
	if (L == NULL)
		return NULL;
	LinkNode* fast = L;
	LinkNode* slow = L;
	while (fast && fast->next){
		fast = fast->next->next; slow = slow->next;
	}
	return slow;
}

//判断链表是否有环，有的话返回入环的第一个节点
LinkNode* isLoop(LinkNode* L){
	if (L == NULL)
		return false;
	LinkNode* slow = L;
	LinkNode* fast = L;
	while (fast && fast->next){
		slow = slow->next; fast = fast->next->next;
		if (slow == fast)
			break;
	}
  
	if (slow != fast) //不等，则说明无环
		return NULL;
  //有环，求第一个入环节点
	fast = L;
	while (slow != fast){
		slow = slow->next; fast = fast->next;
	}
	return slow;
}
