[**非常经典**]无序数组，找出未出现的最小正整数---- - 左程云P386
/*
A[i]==i+1; //位置i上的数A[i]，是否等于i+1
A[i]==A[A[i]-1]; //A[i]这个数，是否在[i,N]区间内存在（ 注解：如果存在，必然是A[A[i]-1] ）
*/
int Fun(int A[], int N){
	for (int i = 0; i < N;){
		if (A[i] == i + 1)
			i++;
		else {
			if (A[i]<i || A[i]>N || A[A[i] - 1] == A[i])  //只是比上一个题目多了条件：A[i]<i || A[i]>N || 
				A[i] = A[--N]; //删除A[i]:N--,A[N]覆盖A[i]
			else
				swap(A[i], A[A[i] - 1]);
		}
	}
	return N + 1;
}
int main(){
	int A[] = { -1, 1, 2, 4, 3, 3, 5, 6, 9, 8 };
	int N = sizeof(A) / sizeof(A[0]);
	int ret = Fun(A, N);
}
