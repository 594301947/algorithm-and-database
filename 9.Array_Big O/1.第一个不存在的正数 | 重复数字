=========================
解题关键:
1~N   -->    A[i] == i+1            A[i] == i
0~N-1 -->    A[i] == A[A[i]-1]      A[i] == A[A[i]]
=========================

[**非常经典**]数组长度为N，找到从1开始第一个不在里面的正整数-----左程云P386
/*
	A[i]==i+1; //位置i上的数A[i]，是否等于i+1
	A[i]==A[A[i]-1]; //A[i]这个数，是否在[i,N]区间内存在（ 注解：如果存在，必然是A[A[i]-1] ）
*/
int Fun(int A[], int N){
	for (int i = 0; i < N; ){
		if (A[i] == i + 1)
			i++;
		else {
			if (A[i]<i || A[i]>N || A[A[i] - 1] == A[i])
				A[i] = A[--N]; //删除A[i]:N--,A[N]覆盖A[i]
			else
				swap(A[i], A[A[i] - 1]);
		}
	}
	return N + 1;
}
int main(){
	int A[] = { -1, 1, 2, 4, 3, 3, 5, 6, 9, 8 };
	int N = sizeof(A) / sizeof(A[0]);
	int ret = Fun(A, N);
}
[剑指offer]在一个长度为N的数组中，所有数都在0~N-1范围内。数组中某些数字是重复的，但不知道有几个
数字重复，也不知道每个数字重复了几次,找出"任意"出现的重复的数
分析：限定了范围——>所有数都在0~N-1范围内
int getNumber(int A[], int N){
	if (A == NULL || N <= 0)
		return -1;
	for (int i = 0; i < N; ){
		if (A[i] == i)
			i++;
		else{
			if (A[i] == A[A[i]])
				return A[i];
			else
				swap(A[i], A[A[i]]);
		}
	}
	return -1;
}
[剑指offer]在一个长度为N+1的数组中，所有数都在1~N范围内。所以数组中至少有一个数字是重复的。
请找出数组中"任意"重复的数（要求：不能修改数组）
