青蛙依次只能跳1步或2步，共N个台阶，问共有多少种方法
答：
    F(x)表示:调到N层台阶，一共有多少种方法  
          F(1)=1
          F(2)=2
          F(N)=F(N-1)+F(N-2)

int F(int N){
	if (N <= 0)
		return 0;
	if (N == 1)
		return 1;
	else if (N == 2)
		return 2;
	else
		return F(N - 1) + F(N - 2);
}

进阶：变态跳台阶
一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法？
    f(n) = [ f(0) + f(1)+ ... + f(n-2) ]+f(n-1)
         = [         f(n-1)            ]+f(n-2) = 2*f(n-1)
可以得出：
    f(n) = 2*f(n-1)
因此:
          F(1)=1
          F(2)=2
          F(N)=2*F(N-1) //只是这一点不同
int F(int N){
	if (N <= 0)
		return 0;
	if (N == 1)
		return 1;
	else if (N == 2)
		return 2;
	else
		return 2 * F(N - 1);
}
