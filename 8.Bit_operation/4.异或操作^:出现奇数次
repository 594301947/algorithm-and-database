【题目】
　　给定一个数组arr，其中只有一个数出现了奇数次，其他数都出现了偶数次，打印这个数。
解：
    先申请一个整型变量记为e，初始化为0，让e去和数组中每一个元素进行异或，最终的e就是答案。
int printOddTimesNum1(vector<int> arr)
{
    int e = 0;
    for(int i=0; i<arr.size(); i++)
    {
        e = e ^ arr[i];
    }
    return e;
}
=====================
【进阶问题】
　　有两个数出现了奇数次，其他数出现了偶数次，打印这两个数。
(假设两个奇数次的数是a和b)
解：
(1)首先申请变量e，初始化为0，去异或数组中每一个元素，e最终的结果就是两个出现奇数次的数的异或，记为a ^ b
(2)先单独求出一个a或b，然后就可以根据e ^ a(或者e ^ b)求出另一个结果怎么做呢？
    因为e = a ^ b，所以 e 的二进制表达中为 1 的位置就是 a 与 b 二进制表达中不同的位置，我们找到这样的一个位置。
    我们再次遍历数组的时候只遍历元素中该位置为0（或者1）的元素，就一定只包含a或b的一个。
    这个遍历过程就和原始问题一样了，只不过加了一个条件
void printOddTimesNum2(vector<int> arr)
{
    int e1 = 0;
    int e2 = 0;
    for(int i=0; i<arr.size(); i++)
    {
        e1 ^= arr[i];
    }
    int rightOne = e1 & (~e1 + 1);
    for(int i=0; i<arr.size(); i++)
    {
        if((arr[i] & rightOne) != 0)
        {
            e2 ^= arr[i];
        }
    }
    cout<<e2<<" "<<(e2^e1)<<endl;
}
