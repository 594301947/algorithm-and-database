//排序

#include<iostream>
using namespace std;

void printA(int A[], int n){
	for (int i = 0; i < n; i++)
		cout << A[i] << "   ";
	cout << endl;
}
void swap(int &a, int &b){
	a ^= b; b ^= a; a ^= b;
}
/*
（1）初始值：
	l和r分别指向最左最右位置
	i用于遍历每个数
（2）循环条件：while(i<r)
（3）交换策略：
	1 —— i++
	0 —— swap(A[i++],A[l++])
	2 —— swap(A[i],A[r--])
*/
void holanflag(int A[], int len){
	int l = 0, r = len - 1;//最左元素，最右元素
	int i = 0;//i用于遍历
	while (i < r){ //循环推出条件，i < r
		switch (A[i]){
		case 0:
			swap(A[l++], A[i++]);
			break;
		case 1:
			i++;
			break;
		case 2:
			swap(A[i], A[r--]);
		}
	}
}
void test(){
	int A[] = { 0,0,2,2,1,1,2,0,1 };
	int len = sizeof(A) / sizeof(A[0]);
	holanflag(A,len); //求逆序对
	printA(A, len);
}

int main(){
	test();
	system("pause");
}
