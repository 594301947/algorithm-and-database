设计一个getMin功能的栈
要求：
  pop,push,getMin操作的时间复杂度都是O(1)
  设计的栈类型可以使用现有的栈结构

答案：使用辅助栈minStack，保证minStack的栈顶元素始终是stackData的最小值

class Solution {
    public:
    stack<int> Data;
    stack<int> Help;
public:
    void push(int value) {
        if(Data.empty()){  //不要忘记判断当前Data是否为空
            Data.push(value);
            Help.push(value);
            return;
        }
            
        //将value和Data.top()较小的压入Help栈--->Help的栈顶元素中始终是数组的最小值
        if(value<Data.top())
            Help.push(value);
        else
            Help.push(Data.top());
        Data.push(value);
    }
    void pop() {
        Data.pop();
        Help.pop();
    }
    int top() {
        return Data.top();
    }
    int min() {
        return Help.top();
    }
};
