#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <assert.h>
#include <string>
#include <vector>
#include <algorithm>
#include <functional>
#include <numeric>  
using namespace std;
class Stack{
public:
	Stack(int capacity) :capacity(capacity){
		data = new int[capacity];
		size = 0;
		top = -1;
	}
	bool empty(){
		return top == -1 ? true : false;
	}
	bool full(){
		return top == capacity - 1 ? true : false;
	}
	void push(int val){
		if (!full()){
			data[++top] = val;
			size++;
		}
		else
			cout << "栈已经满了" << endl;
	}
	void pop(){
		if (!empty()){
			cout << data[top] << endl;
			top--;
			size--;
		}
		else
			cout << "栈是空了" << endl;
	}
	int getTop(){
		if (!empty()){
			return data[top];
		}
		else
			cout << "栈是空了" << endl;
	}
private:
	int top;
	int* data;
	int size;//有效元素个数
	int capacity; //容量
};
int main(){
	Stack s(2);
	s.push(1);
	s.push(2);
	s.push(3);
	s.pop();
	s.pop();
	s.pop();
	cout << s.getTop() << endl;
	system("pause");


}
