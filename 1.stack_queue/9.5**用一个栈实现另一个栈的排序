使用辅助栈help，将data栈中的元素，逐渐压入help中，直到data为空
每个将data的栈顶元素压入help中，压入过程：
   1.获取data的栈顶元素：int top=data.top(); data.pop();
   2.当符合下面条件top>help.top()时，将help中的元素“转移到”data中
       while(!help.empty() && top>help.top()){
         data.push(help.top());  help.pop();
       }
   3.top压入help中：help.push(top)
     
     循环1和2，直到data为空

#include<iostream>
#include<stack>
using namespace std;

void sortByStack(stack<int>& data){
	if (data.empty())
		return;
	stack<int> help; //辅助栈，始终是有序的
	//将data中的元素，根据"压入规则"，依次向SHelp中压入
	while (!data.empty()){
		int top = data.top(); data.pop();
		while (!help.empty()&&top>help.top()){ //将help中的元素压入data
			data.push(help.top()); help.pop();
		}
		help.push(top);
	}
	//将help中的元素，导入data
	while (!help.empty()){
		data.push(help.top());
		help.pop();
	}
}
int main(){
	stack<int> S;
	S.push(1);
	S.push(5);
	S.push(4);
	S.push(3);
	S.push(2);
	sortByStack(S);
}
