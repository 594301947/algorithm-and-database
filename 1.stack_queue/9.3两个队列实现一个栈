/*
QData.push: 1,2,3,4,5入队时，只push进入QData
QData.pop():
	(1)将QData中的1,2,3,4元素pop;再push到QHelp
	(2)将QData中的最后一个元素pop
	(3)将QData和QHelp交换内容
*/

class Stack{
private:
	queue<int> data;
	queue<int> help;
public:
	bool empty(){
		return data.empty();
	}
	void push(int val){
		data.push(val);//入队列时，只进入data
	}
	void pop(){
		if (!data.empty()){
			while (data.size() > 1){//1.将data中的元素（除了最后一个元素外的其他元素）
				help.push(data.front()); data.pop();
			}
			//2.此时,将data中的最后一个元素pop
			data.pop();
			swap(data, help);
		}
	}
	int top(){
		if (data.empty())
			return -1;
		while (data.size() > 1){//1.将data中的元素（除了最后一个元素外的其他元素）
			help.push(data.front()); data.pop();
		}
		//2.此时,将data中的最后一个元素保存在ret，并放入help中
		int ret = data.front(); data.pop();
		help.push(ret);
		swap(data, help);
		return ret;
	}
};
int main(){
	Stack st;
	cout << st.top() << endl;
	st.push(1);
	st.push(2);
	st.push(3);
	st.push(4);
	cout << st.top() << endl;
	st.pop();
	cout << st.top() << endl;
	st.pop();
	cout << st.top() << endl;
}
