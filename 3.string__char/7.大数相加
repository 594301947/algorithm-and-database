
string BigNumberPlus(char * sa, char* sb){
	if (sa == NULL || sb == NULL)
		return "";

	vector<int> ret;

	char* p1 = sa + strlen(sa) - 1;
	char* p2 = sb + strlen(sb) - 1;
	
	int sum = 0, bigBit = 0, smallbit = 0;
	//从后向前加
	while (p1 >= sa && p2 >= sb){
		sum = bigBit + *(p1--) - '0' + *(p2--) - '0';
		bigBit = sum / 10; smallbit = sum % 10;
		ret.emplace_back(smallbit);
	}
	while (p1 >= sa){
		sum = bigBit + *(p1--) - '0';
		bigBit = sum / 10; smallbit = sum % 10;
		ret.emplace_back(smallbit);
	}
	while (p2 >= sb){
		sum = bigBit + *(p2--) - '0';
		bigBit = sum / 10; smallbit = sum % 10;
		ret.emplace_back(smallbit);
	}
	string strRet;
	for (int i = ret.size() - 1; i >= 0; i--)
		strRet += ret[i] + '0'; //将数字转换成char
	return strRet;
}

int main(){
	char* sa = "12345";
	char* sb = "1564165165";
	BigNumberPlus(sa, sb);
}




