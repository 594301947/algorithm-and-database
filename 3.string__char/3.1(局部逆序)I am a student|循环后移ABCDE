【活用{局部逆序函数}的组合】
//1.I am from shanghai-->shanghai from am I
void reverse(char* begin,char* end){ //字符串反转
	if (begin == NULL || end == NULL || end-begin<=0)
		return;
	char* p = begin;
	while (begin < end){
		swap(*begin, *end);
		begin++; end--;
	}
}
void reversePartStr(char* str){ //寻找空格，倒置
	if (str == NULL)
		return;
	char* start = str;
	while (*start != '\0'){
		char* end = start;
		while (*end != ' ' && *end != '\0')
			end++;
		reverse(start, end-1);
		start = end + 1;
	}
}
void reverseM(char* str){ 
	if (str == NULL)
		return;
	reverse(str, str + strlen(str) - 1); //全局倒置
	reversePartStr(str); //局部倒置
}

int main(){
	char str[] = "I am from shanghai";
	reverseM(str);
	cout << str << endl;
	system("pause");
}
=====================
//2.循环移位:str=“ABCDE”，i=2 ---> “DEABC”
void loopMove(char* str, int i){
	if (str == NULL || strlen(str) == 0 || i > strlen(str))
		return;
	int Len = strlen(str);
	//[0,i]逆序
	reversePart(str + 0, str + i);
	//[i+1,Len-1]逆序
	reversePart(str + i + 1, str + Len - 1);
	//最后整体逆序
	reversePart(str, str + Len - 1);
}
int main(){
	char A[100] = "ABCDE";
	loopMove(A,2);
	cout << A << endl;
}
